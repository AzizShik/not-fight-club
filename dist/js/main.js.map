{"version":3,"file":"js/main.js","mappings":"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","sources":["webpack://not-fight-club/webpack/bootstrap","webpack://not-fight-club/webpack/runtime/publicPath","webpack://not-fight-club/./src/scripts/state.js","webpack://not-fight-club/./src/scripts/storage.js","webpack://not-fight-club/./src/scripts/components/battle.js","webpack://not-fight-club/./src/scripts/components/register.js","webpack://not-fight-club/./src/scripts/components/home.js","webpack://not-fight-club/./src/scripts/components/settings.js","webpack://not-fight-club/./src/scripts/router.js","webpack://not-fight-club/./src/scripts/components/toolbar.js","webpack://not-fight-club/./src/scripts/utils/capitalaze.js","webpack://not-fight-club/./src/scripts/components/popup.js","webpack://not-fight-club/./src/scripts/components/character.js","webpack://not-fight-club/./src/scripts/screens.js","webpack://not-fight-club/./src/scripts/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.p = \"\";","import frodoAvatarImg from '../assets/images/character_frodo.jpg';\n\nimport enemySpiderAvatar from '../assets/images/enemy_spider.jpg';\nimport enemyTrollAvatar from '../assets/images/enemy_troll.jpg';\nimport enemyKnightAvatar from '../assets/images/enemy_knight.jpg';\nimport enemySauronAvatar from '../assets/images/enemy_sauron.jpg';\n\nexport const gameState = {\n  player: {\n    name: '',\n    avatar: '',\n    wins: 0,\n    loses: 0,\n    health: 100,\n    maxHealth: 100,\n    attack: 10,\n    attackZones: 1,\n    defendZones: 2,\n    critChance: 0.2,\n    critMultiplier: 1.5,\n  },\n  battle: {\n    playerAttack: [],\n    playerDefend: [],\n    enemyAttack: [],\n    enemyDefend: [],\n    log: [],\n  },\n  enemy: {},\n  enemies: [\n    {\n      name: 'Spider',\n      avatar: enemySpiderAvatar,\n      health: 80,\n      maxHealth: 80,\n      attack: 12,\n      critChance: 0.25,\n      critMultiplier: 1.5,\n      attackZones: 2,\n      defendZones: 1,\n    },\n    {\n      name: 'Troll',\n      avatar: enemyTrollAvatar,\n      health: 120,\n      maxHealth: 120,\n      attack: 8,\n      critChance: 0.1,\n      critMultiplier: 2,\n      attackZones: 1,\n      defendZones: 3,\n    },\n    {\n      name: 'Knight',\n      avatar: enemyKnightAvatar,\n      health: 100,\n      maxHealth: 100,\n      attack: 10,\n      critChance: 0.15,\n      critMultiplier: 1.5,\n      attackZones: 1,\n      defendZones: 2,\n    },\n    {\n      name: 'Sauron',\n      avatar: enemySauronAvatar,\n      health: 150,\n      maxHealth: 150,\n      attack: 15,\n      critChance: 0.15,\n      critMultiplier: 1.5,\n      attackZones: 2,\n      defendZones: 2,\n    },\n  ],\n};\n","import { gameState } from './state.js';\n\nexport function saveGameState() {\n  localStorage.setItem('notFightClubGame', JSON.stringify(gameState));\n}\n\nexport function loadGameState() {\n  const savedState = localStorage.getItem('notFightClubGame');\n  if (savedState) {\n    const parsed = JSON.parse(savedState);\n    Object.assign(gameState, parsed);\n  }\n}\n","import { gameState } from '../state';\nimport { loadGameState, saveGameState } from '../storage';\nimport { showPopup } from './popup';\n\nlet battleZoneAttackClickHandler = null;\nlet battleZoneDefenceClickHandler = null;\n\nlet battleAttackBtnHandler = null;\n\nlet isResultsPopupShown = false;\n\nimport cupAwarIconUrl from '../../assets/icons/cup.svg';\nimport loseIconUrl from '../../assets/icons/lose.svg';\nimport { addToScreen } from '../screens';\n\nexport function initBattle() {\n  const battleLogEl = document.querySelector('[data-battle_log]');\n\n  if (gameState.enemy.name) {\n    gameState.battle.log.forEach((obj) => {\n      if (obj.isCrit && obj.isBlocked) {\n        createAttackLog(obj);\n      } else if (!obj.isBlocked) {\n        createAttackLog(obj);\n      } else {\n        createDefendLog(obj);\n      }\n    });\n\n    // if (isCritical && gameState.battle[characterDefendStr].includes(attack)) {\n    //   createAttackLog(attackObj);\n    // } else if (!gameState.battle[characterDefendStr].includes(attack)) {\n    //   createAttackLog(attackObj);\n    // } else {\n    //   createDefendLog(attackObj);\n    // }\n  } else {\n    const randomIndex = Math.floor(Math.random() * gameState.enemies.length);\n    gameState.enemy = JSON.parse(\n      JSON.stringify(gameState.enemies[randomIndex]),\n    );\n    saveGameState();\n  }\n\n  updateBattleScreen();\n\n  const battleAttackBtn = document.querySelector(\n    '[data-battle_controls_attack_btn]',\n  );\n  battleAttackBtn.disabled = true;\n\n  const battleZoneAttack = document.querySelector('[data-battle_zone_attack]');\n  const battleZoneDefence = document.querySelector(\n    '[data-battle_zone_defence]',\n  );\n\n  const battleZoneAttackInputs = battleZoneAttack.querySelectorAll('input');\n  const battleZoneDefenceInputs = battleZoneDefence.querySelectorAll('input');\n\n  function resetAllCheboxes() {\n    battleZoneAttackInputs.forEach((input) => {\n      input.checked = false;\n    });\n    battleZoneDefenceInputs.forEach((input) => {\n      input.checked = false;\n    });\n  }\n\n  resetAllCheboxes();\n\n  if (battleZoneAttackClickHandler) {\n    battleZoneAttack.removeEventListener('click', battleZoneAttackClickHandler);\n  }\n\n  if (battleZoneDefenceClickHandler) {\n    battleZoneDefence.removeEventListener(\n      'click',\n      battleZoneDefenceClickHandler,\n    );\n  }\n\n  const attackMaxSelect = gameState.player.attackZones;\n\n  let attackSelectedCheboxesArr = [];\n\n  battleZoneAttackClickHandler = (e) => {\n    const el = e.target;\n\n    if (el.tagName === 'LABEL') return;\n\n    const selectedCheckboxes =\n      battleZoneAttack.querySelectorAll('input:checked').length;\n\n    if (el.closest('[data-battle_zone_attack_radio]')) {\n      if (el.checked && attackSelectedCheboxesArr.length < attackMaxSelect) {\n        attackSelectedCheboxesArr.push(el);\n      }\n\n      if (!el.checked) {\n        el.checked = false;\n        attackSelectedCheboxesArr = attackSelectedCheboxesArr.filter(\n          (e) => e != el,\n        );\n      }\n\n      if (selectedCheckboxes > attackMaxSelect) {\n        const lastAttackSelect = attackSelectedCheboxesArr.shift();\n        lastAttackSelect.checked = false;\n        attackSelectedCheboxesArr.push(el);\n      }\n    }\n\n    updateBattleBtnState();\n  };\n\n  const defenceMaxSelect = gameState.player.defendZones;\n\n  let defenceSelectedCheboxesArr = [];\n\n  battleZoneDefenceClickHandler = (e) => {\n    const el = e.target;\n\n    if (el.tagName === 'LABEL') return;\n\n    const selectedCheckboxes =\n      battleZoneDefence.querySelectorAll('input:checked').length;\n\n    if (el.closest('[data-battle_zone_defence_radio]')) {\n      if (el.checked && defenceSelectedCheboxesArr.length < defenceMaxSelect) {\n        defenceSelectedCheboxesArr.push(el);\n      }\n\n      if (!el.checked) {\n        el.checked = false;\n        defenceSelectedCheboxesArr = defenceSelectedCheboxesArr.filter(\n          (e) => e != el,\n        );\n      }\n\n      if (selectedCheckboxes > defenceMaxSelect) {\n        const lastAttackSelect = defenceSelectedCheboxesArr.shift();\n        lastAttackSelect.checked = false;\n        defenceSelectedCheboxesArr.push(el);\n      }\n    }\n\n    updateBattleBtnState();\n  };\n\n  function updateBattleBtnState() {\n    if (\n      (attackMaxSelect === attackSelectedCheboxesArr.length) &\n      (defenceMaxSelect === defenceSelectedCheboxesArr.length)\n    ) {\n      battleAttackBtn.disabled = false;\n    } else {\n      battleAttackBtn.disabled = true;\n    }\n  }\n\n  function resetBattleZones() {\n    // battleZoneAttackInputs.forEach((input) => {\n    //   input.checked = false;\n    // });\n    // battleZoneDefenceInputs.forEach((input) => {\n    //   input.checked = false;\n    // });\n\n    // attackSelectedCheboxesArr = [];\n    // defenceSelectedCheboxesArr = [];\n\n    gameState.battle.playerAttack = [];\n    gameState.battle.playerDefend = [];\n    gameState.battle.enemyAttack = [];\n    gameState.battle.enemyDefend = [];\n\n    saveGameState();\n\n    // battleAttackBtn.disabled = true;\n  }\n\n  battleZoneAttack.addEventListener('click', battleZoneAttackClickHandler);\n  battleZoneDefence.addEventListener('click', battleZoneDefenceClickHandler);\n\n  if (battleAttackBtnHandler) {\n    battleAttackBtn.removeEventListener('click', battleAttackBtnHandler);\n  }\n\n  battleAttackBtnHandler = (e) => {\n    let attackZonesArr = [];\n    let defenceZonesArr = [];\n\n    attackSelectedCheboxesArr.forEach((input) => {\n      attackZonesArr.push(input.dataset.battle_zone_attack_input);\n    });\n\n    defenceSelectedCheboxesArr.forEach((input) => {\n      defenceZonesArr.push(input.dataset.battle_zone_defence_input);\n    });\n\n    gameState.battle.playerAttack.push(...attackZonesArr);\n    gameState.battle.playerDefend.push(...defenceZonesArr);\n\n    chooseEnemyAttackZones();\n    chooseEnemyDefendZones();\n    saveGameState();\n\n    calculateResults();\n\n    resetBattleZones();\n  };\n\n  battleAttackBtn.addEventListener('click', battleAttackBtnHandler);\n\n  const allZonesArr = ['head', 'neck', 'body', 'belly', 'legs'];\n\n  function chooseEnemyAttackZones() {\n    for (\n      let i = 0;\n      gameState.battle.enemyAttack.length < gameState.enemy.attackZones;\n      i++\n    ) {\n      const randomIdx = Math.floor(Math.random() * allZonesArr.length);\n\n      if (!gameState.battle.enemyAttack.includes(allZonesArr[randomIdx])) {\n        gameState.battle.enemyAttack.push(allZonesArr[randomIdx]);\n      }\n    }\n  }\n\n  function chooseEnemyDefendZones() {\n    for (\n      let i = 0;\n      gameState.battle.enemyDefend.length < gameState.enemy.defendZones;\n      i++\n    ) {\n      const randomIdx = Math.floor(Math.random() * allZonesArr.length);\n\n      if (!gameState.battle.enemyDefend.includes(allZonesArr[randomIdx])) {\n        gameState.battle.enemyDefend.push(allZonesArr[randomIdx]);\n      }\n    }\n  }\n\n  function calculateResults() {\n    attackResults('player');\n    if (gameState.enemy.health >= 1) {\n      attackResults('enemy');\n    }\n  }\n\n  function attackResults(character) {\n    let characterAttack;\n    let characterDefend;\n\n    if (character === 'player') {\n      characterAttack = 'player';\n      characterDefend = 'enemy';\n    } else if (character === 'enemy') {\n      characterAttack = 'enemy';\n      characterDefend = 'player';\n    }\n\n    const characterAttackStr = characterAttack + 'Attack';\n    const characterDefendStr = characterDefend + 'Defend';\n\n    const attackArr = gameState.battle[characterAttackStr];\n    attackArr.forEach((attack) => {\n      const isCritical = isAttackCritical();\n      const damage = isCritical\n        ? Math.floor(\n            gameState[characterAttack].attack *\n              gameState[characterAttack].critMultiplier,\n          )\n        : gameState[characterAttack].attack;\n\n      const isCharacterAttacking = characterAttack === 'player' ? true : false;\n\n      const attackingCharacterSpan = isCharacterAttacking\n        ? 'character'\n        : 'enemy';\n      const defendingCharacterSpan = isCharacterAttacking\n        ? 'enemy'\n        : 'character';\n\n      const attackObj = {\n        attackerName: gameState[characterAttack].name,\n        defenderName: gameState[characterDefend].name,\n        attackZone: attack,\n        isCrit: isCritical,\n        damage: damage,\n        isBlocked: gameState.battle[characterDefendStr].includes(attack),\n        attackingCharacterSpan: attackingCharacterSpan,\n        defendingCharacterSpan: defendingCharacterSpan,\n        characterAttack: characterAttack,\n        characterDefend: characterDefend,\n      };\n\n      gameState.battle.log.push(attackObj);\n\n      if (attackObj.isCrit && attackObj.isBlocked) {\n        createAttackLog(attackObj);\n      } else if (!attackObj.isBlocked) {\n        createAttackLog(attackObj);\n      } else {\n        createDefendLog(attackObj);\n      }\n\n      updateBattleHealth(attackObj.characterDefend, damage);\n    });\n  }\n\n  function createAttackLog(attackObj) {\n    const { damage, characterDefend } = attackObj;\n\n    const logItem = document.createElement('div');\n    logItem.classList.add('battle__log-item');\n    logItem.innerHTML = attackItemLogHTML(attackObj);\n\n    battleLogEl.append(logItem);\n    battleLogEl.scrollTop = battleLogEl.scrollHeight;\n  }\n\n  function updateBattleHealth(character, damage) {\n    gameState[character].health = gameState[character].health - damage;\n    updateBattleScreen();\n  }\n\n  function createDefendLog(attackObj) {\n    const { attackerName, defenderName, attackZone } = attackObj;\n\n    const logItem = document.createElement('div');\n    logItem.classList.add('battle__log-item');\n    logItem.innerHTML = defendItemLogHTML(attackObj);\n\n    battleLogEl.append(logItem);\n    battleLogEl.scrollTop = battleLogEl.scrollHeight;\n  }\n\n  function attackItemLogHTML(attackObj) {\n    const {\n      attackerName,\n      defenderName,\n      attackZone,\n      isCrit,\n      damage,\n      isBlocked,\n      attackingCharacterSpan,\n      defendingCharacterSpan,\n    } = attackObj;\n\n    const attackZoneCapitalized =\n      attackZone[0].toUpperCase() + attackZone.slice(1);\n\n    if (isCrit && isBlocked) {\n      return `\n            <span class=\"battle__log-item-${attackingCharacterSpan} battle__log-item-span\" data-battle_log_character_span>${attackerName}</span>\n            attacked\n            <span class=\"battle__log-item-${defendingCharacterSpan} battle__log-item-span\" data-battle_log_enemy_span>${defenderName}</span>\n            to\n            <span class=\"battle__log-item-zone battle__log-item-span\" data-battle_log_zone_span>${attackZoneCapitalized}</span>\n            <span class=\"battle__log-item-${defendingCharacterSpan} battle__log-item-span\" data-battle_log_enemy_span>${defenderName}</span>\n            tried to block but <span class=\"battle__log-item-${attackingCharacterSpan} battle__log-item-span\" data-battle_log_character_span>${attackerName}</span> was very lucky and crit his opponent for <span class=\"battle__log-item-damage battle__log-item-span\" data-battle_log_zone_span>${damage} damage</span>\n    `;\n    } else if (isCrit) {\n      return `\n            <span class=\"battle__log-item-${attackingCharacterSpan} battle__log-item-span\" data-battle_log_character_span>${attackerName}</span>\n            attacked\n            <span class=\"battle__log-item-${defendingCharacterSpan} battle__log-item-span\" data-battle_log_enemy_span>${defenderName}</span>\n            to\n            <span class=\"battle__log-item-zone battle__log-item-span\" data-battle_log_zone_span>${attackZoneCapitalized}</span>\n            and crit\n            <span class=\"battle__log-item-damage battle__log-item-span\" data-battle_log_zone_span>${damage} damage</span>\n    `;\n    } else {\n      return `\n            <span class=\"battle__log-item-${attackingCharacterSpan} battle__log-item-span\" data-battle_log_character_span>${attackerName}</span>\n            attacked\n            <span class=\"battle__log-item-${defendingCharacterSpan} battle__log-item-span\" data-battle_log_enemy_span>${defenderName}</span>\n            to\n            <span class=\"battle__log-item-zone battle__log-item-span\" data-battle_log_zone_span>${attackZoneCapitalized}</span>\n            and deal\n            <span class=\"battle__log-item-damage battle__log-item-span\" data-battle_log_zone_span>${damage} damage</span>\n    `;\n    }\n  }\n\n  function defendItemLogHTML(attackObj) {\n    const {\n      attackerName,\n      defenderName,\n      attackZone,\n      attackingCharacterSpan,\n      defendingCharacterSpan,\n    } = attackObj;\n\n    const attackZoneCapitalized =\n      attackZone[0].toUpperCase() + attackZone.slice(1);\n\n    return `\n            <span class=\"battle__log-item-${attackingCharacterSpan} battle__log-item-span\" data-battle_log_character_span>${attackerName}</span>\n            attacked\n            <span class=\"battle__log-item-${defendingCharacterSpan} battle__log-item-span\" data-battle_log_enemy_span>${defenderName}</span>\n            to\n            <span class=\"battle__log-item-zone battle__log-item-span\" data-battle_log_zone_span>${attackZoneCapitalized}</span>\n            but <span class=\"battle__log-item-${defendingCharacterSpan} battle__log-item-span\" data-battle_log_enemy_span>${defenderName}</span>\n            was able to <span class=\"battle__log-item-defend battle__log-item-span\" data-battle_log_protect_span>protect</span>\n            his  <span class=\"battle__log-item-zone battle__log-item-span\" data-battle_log_zone_span>${attackZoneCapitalized}</span>\n    `;\n  }\n\n  function isAttackCritical() {\n    return gameState.player.critChance > Math.random();\n  }\n\n  calculateResults();\n\n  async function showResultsPopup(result) {\n    console.log(battleLogEl.scrollHeight);\n    const savedScrollTop = battleLogEl.scrollTop;\n\n    await addToScreen('./views/popup_results.html');\n\n    const newBattleLogEl = document.querySelector('[data-battle_log]');\n    if (newBattleLogEl) {\n      newBattleLogEl.scrollTop = savedScrollTop;\n    }\n\n    const resultsPopup = document.querySelector('[data-popup=\"results\"]');\n    const resultsPopupTitle = document.querySelector('[data-popup__title]');\n\n    const imgIcon = document.createElement('img');\n    imgIcon.classList.add('popup__results-icon');\n\n    if (result === 'win') {\n      imgIcon.src = cupAwarIconUrl;\n      resultsPopupTitle.textContent = 'Congratulations with your win!';\n      resultsPopupTitle.append(imgIcon);\n      addWinToPlayer();\n      showPopup('[data-popup=\"results\"]');\n    } else {\n      imgIcon.src = loseIconUrl;\n      resultsPopupTitle.textContent = 'Maybe next time';\n      resultsPopupTitle.append(imgIcon);\n      addLoseToPlayer();\n      showPopup('[data-popup=\"results\"]');\n    }\n  }\n\n  function addLoseToPlayer() {\n    gameState.player.loses = gameState.player.loses + 1;\n    saveGameState();\n  }\n\n  function addWinToPlayer() {\n    gameState.player.wins = gameState.player.wins + 1;\n    saveGameState();\n  }\n\n  function updateBattleScreen() {\n    const characterAvatarImg = document.querySelector(\n      '[data-battle_character_avatar_img]',\n    );\n    const characterName = document.querySelector(\n      '[data-battle_character_name]',\n    );\n    const characterHealth = document.querySelector(\n      '[data-battle_character_current_health]',\n    );\n    const characterTotalHealth = document.querySelector(\n      '[data-battle_character_total_health]',\n    );\n\n    const characterHealthBg = document.querySelector('[data-avatar_health_bg]');\n    const enemyHealthBg = document.querySelector('[data-enemy_health_bg]');\n\n    characterAvatarImg.src = gameState.player.avatar;\n    characterName.textContent = gameState.player.name;\n\n    if (gameState.player.health >= 1) {\n      characterHealth.textContent = gameState.player.health;\n      characterHealthBg.style.width = `${\n        (gameState.player.health * 100) / gameState.player.maxHealth\n      }%`;\n    } else {\n      characterHealth.textContent = 0;\n      characterHealthBg.style.width = `0%`;\n\n      if (!isResultsPopupShown) {\n        isResultsPopupShown = true;\n\n        showResultsPopup('lose');\n      }\n    }\n\n    characterTotalHealth.textContent = gameState.player.maxHealth;\n\n    const enemyAvatarImg = document.querySelector(\n      '[data-battle_enemy_avatar_img]',\n    );\n    const enemyName = document.querySelector('[data-battle_enemy_name]');\n    const enemyCurrentHealth = document.querySelector(\n      '[data-battle_enemy_current_health]',\n    );\n    const enemyTotalHealth = document.querySelector(\n      '[data-battle_enemy_total_health]',\n    );\n\n    enemyAvatarImg.src = gameState.enemy.avatar;\n    enemyName.textContent = gameState.enemy.name;\n\n    if (gameState.enemy.health > 0) {\n      enemyCurrentHealth.textContent = gameState.enemy.health;\n      enemyHealthBg.style.width = `${\n        (gameState.enemy.health * 100) / gameState.enemy.maxHealth\n      }%`;\n    } else {\n      enemyCurrentHealth.textContent = 0;\n      enemyHealthBg.style.width = `0%`;\n\n      if (!isResultsPopupShown) {\n        isResultsPopupShown = true;\n\n        showResultsPopup('win');\n      }\n    }\n\n    enemyTotalHealth.textContent = gameState.enemy.maxHealth;\n  }\n}\n\nexport function cleanBattleLog() {\n  isResultsPopupShown = false;\n  gameState.player.health = gameState.player.maxHealth;\n  gameState.enemy = {};\n  gameState.battle.log = [];\n  const battleLogEl = document.querySelector('[data-battle_log]');\n  battleLogEl.textContent = '';\n\n  saveGameState();\n}\n","import { router } from '../router';\nimport { showScreen } from '../screens';\nimport { gameState } from '../state';\nimport { saveGameState } from '../storage';\nimport { initHome } from './home';\nimport { initToolbar } from './toolbar';\n\nlet registerBtnHandler;\nlet registerInputHandler;\n\nexport async function initRegister() {\n  const registerBtn = document.querySelector('[data-register_btn]');\n  const registerInput = document.querySelector('[data-register_input]');\n\n  if (registerBtnHandler && registerBtn) {\n    registerBtn.removeEventListener('click', registerBtnHandler);\n  }\n  if (registerInputHandler && registerInput) {\n    registerInput.removeEventListener('input', registerInputHandler);\n  }\n\n  registerBtnHandler = async (e) => {\n    gameState.player.name = registerInput.value;\n    saveGameState();\n    await router(e);\n    await initHome();\n    await initToolbar();\n    // await showScreen('/views/home.html');\n    // switchScreen('home', screens);\n  };\n\n  registerInputHandler = (e) => {\n    if (e.target.value.length >= 1) {\n      registerBtn.disabled = false;\n    } else {\n      registerBtn.disabled = true;\n    }\n  };\n\n  if (registerBtn && registerInput) {\n    registerBtn.addEventListener('click', registerBtnHandler);\n    registerInput.addEventListener('input', registerInputHandler);\n  }\n}\n","import { gameState } from '../state';\n\nexport async function initHome() {\n  const homeTitleName = document.querySelector('[data-home_title_name]');\n  homeTitleName.textContent = gameState.player.name;\n}\n","import { gameState } from '../state';\nimport { saveGameState } from '../storage';\n\nlet editNameHandler = null;\nlet inputHandler = null;\n\nexport function initSettings() {\n  const settingsChangeName = document.querySelector(\n    '[data-settings_change_name]',\n  );\n  const editNameBtn = document.querySelector('[data-edit_change_name]');\n  const changeNameInput = document.querySelector(\n    '[data-settings_change_name_input]',\n  );\n  const currentNameSpan = document.querySelector(\n    '[data-settings_change-name_current_name]',\n  );\n\n  currentNameSpan.textContent = gameState.player.name;\n  let currentPlayerName = gameState.player.name;\n\n  if (editNameHandler) {\n    editNameBtn.removeEventListener('click', editNameHandler);\n    settingsChangeName.classList.remove('settings__change-name--active');\n    editNameBtn.textContent = 'Edit';\n    currentNameSpan.textContent = currentPlayerName;\n  }\n  if (inputHandler) {\n    changeNameInput.removeEventListener('input', inputHandler);\n  }\n\n  editNameHandler = (e) => {\n    editChangeInput();\n    gameState.player.name = changeNameInput.value.trim();\n    saveGameState();\n  };\n\n  inputHandler = (e) => {\n    const input = e.target;\n\n    if (!input.value) {\n      editNameBtn.disabled = true;\n    } else {\n      editNameBtn.disabled = false;\n      currentPlayerName = input.value.trim();\n    }\n  };\n\n  editNameBtn.addEventListener('click', editNameHandler);\n  changeNameInput.addEventListener('input', inputHandler);\n\n  function editChangeInput() {\n    if (\n      !settingsChangeName.classList.contains('settings__change-name--active')\n    ) {\n      settingsChangeName.classList.add('settings__change-name--active');\n      editNameBtn.textContent = 'Save';\n      changeNameInput.value = currentPlayerName;\n    } else {\n      settingsChangeName.classList.remove('settings__change-name--active');\n      editNameBtn.textContent = 'Edit';\n      currentNameSpan.textContent = currentPlayerName;\n    }\n  }\n}\n\nexport function cleanupSettings() {\n  const editNameBtn = document.querySelector('[data-edit_change_name]');\n  const changeNameInput = document.querySelector(\n    '[data-settings_change_name_input]',\n  );\n  const currentNameSpan = document.querySelector(\n    '[data-settings_change-name_current_name]',\n  );\n  const settingsChangeName = document.querySelector(\n    '[data-settings_change_name]',\n  );\n\n  if (editNameHandler && editNameBtn) {\n    editNameBtn.removeEventListener('click', editNameHandler);\n  }\n  if (inputHandler && changeNameInput) {\n    changeNameInput.removeEventListener('input', inputHandler);\n  }\n\n  settingsChangeName.classList.remove('settings__change-name--active');\n  editNameBtn.textContent = 'Edit';\n  currentNameSpan.textContent = currentPlayerName;\n\n  editNameHandler = null;\n  inputHandler = null;\n}\n","import { initBattle } from './components/battle';\nimport { initCharacter } from './components/character';\nimport { initHome } from './components/home';\nimport { initRegister } from './components/register';\nimport { initSettings } from './components/settings';\nimport { initToolbar } from './components/toolbar';\nimport { initScreens } from './screens';\nimport { capitalazeFirstLetter } from './utils/capitalaze';\n\nconst routes = {\n  '/register': '/views/register.html',\n  '/index.html': '/views/home.html',\n  '/': '/views/home.html',\n  '/home': '/views/home.html',\n  '/character': '/views/character.html',\n  '/settings': '/views/settings.html',\n  '/battle': '/views/battle.html',\n};\n\nexport const router = async (e) => {\n  const el = e.target;\n  const path = el.dataset.link;\n\n  window.history.pushState({}, '', path);\n  await handleLocation();\n};\n\nexport const changeWindowHash = (hash) => {\n  window.history.pushState({}, '', hash);\n};\n\nexport const handleLocation = async () => {\n  console.log('works!');\n\n  const path = window.location.pathname;\n  const route = routes[path] || '/home';\n\n  if (path === '/') {\n    changeWindowHash('/home');\n    initScreens();\n  }\n\n  if (path === '/index.html') {\n    changeWindowHash('/home');\n    initScreens();\n  }\n\n  if (!routes[path]) {\n    changeWindowHash('/home');\n    initScreens();\n  }\n\n  console.log(path);\n  console.log(route);\n\n  const html = await fetch(route).then((data) => data.text());\n  const toolBar = await fetch('./views/toolbar.html').then((data) =>\n    data.text(),\n  );\n\n  document.getElementById('root').innerHTML = html;\n  document.getElementById('root').innerHTML += toolBar;\n\n  const initialize = {\n    '/': initHome,\n    '/index.html': initHome,\n    '/home': initHome,\n    '/register': initRegister,\n    '/character': initCharacter,\n    '/settings': initSettings,\n    '/battle': initBattle,\n  };\n\n  let initFunc = initialize[path];\n\n  if (!initFunc) {\n    initFunc = initHome;\n  } else {\n    initFunc();\n  }\n\n  initToolbar();\n};\n\nwindow.addEventListener('popstate', handleLocation);\n","import { router } from '../router';\nimport { capitalazeFirstLetter } from '../utils/capitalaze';\n\nexport async function initToolbar() {\n  const dataLinks = document.querySelectorAll('[data-link]');\n\n  dataLinks.forEach((link) => {\n    const path = link.dataset.link;\n\n    link.addEventListener('click', async (e) => {\n      await router(e);\n\n      const title = link.dataset.page_btn;\n\n      const tollbarPageTitle = document.querySelector('[data-page_title]');\n      tollbarPageTitle.textContent = capitalazeFirstLetter(title);\n    });\n  });\n}\n","export function capitalazeFirstLetter(str) {\n  return str[0].toUpperCase() + str.slice(1);\n}\n","import { gameState } from '../state';\n\nimport frodoAvatarImg from '../../assets/images/character_frodo.jpg';\nimport gandalfAvatarImg from '../../assets/images/character_gandalf.jpg';\nimport aragornAvatarImg from '../../assets/images/character_aragorn.jpg';\nimport legolasAvatarImg from '../../assets/images/character_legolas.jpg';\nimport { saveGameState } from '../storage';\nimport { initCharacter } from './character';\nimport { initBattle, cleanBattleLog } from './battle';\nimport { addToScreen, showScreen, switchScreen } from '../screens';\nimport { initToolbar } from './toolbar';\n\nlet popupClickHandler = null;\nlet frodoClickHandler = null;\nlet gandalfAvatarClickHandler = null;\nlet aragornAvatarClickHandler = null;\nlet legolasAvatarClickHandler = null;\nlet newFightResultsBtnHandler = null;\nlet changeCharacterResultsBtnHandler = null;\n\nexport async function showPopup(parentElement) {\n  const body = document.querySelector('body');\n  const popup = document.querySelector(parentElement);\n  const popupContainer = popup.querySelector('[data-popup_container]');\n\n  const popupShowAnimation = [{ opacity: '0' }, { opacity: '1' }];\n\n  const popupTiming = {\n    duration: 400,\n    fill: 'forwards',\n  };\n\n  popupContainer.animate(popupShowAnimation, popupTiming);\n  popup.classList.add('popup--active');\n  body.classList.add('lock');\n\n  const frodoAvatar = document.querySelector('[data-avatar_name=\"frodo\"]');\n  const gandalfAvatar = document.querySelector('[data-avatar_name=\"gandalf\"]');\n  const aragornAvatar = document.querySelector('[data-avatar_name=\"aragorn\"]');\n  const legolasAvatar = document.querySelector('[data-avatar_name=\"legolas\"]');\n\n  if (popupClickHandler) {\n    popup.removeEventListener('click', popupClickHandler);\n  }\n  if (frodoClickHandler && frodoAvatar) {\n    frodoAvatar.removeEventListener('click', frodoClickHandler);\n  }\n  if (gandalfAvatarClickHandler && gandalfAvatar) {\n    gandalfAvatar.removeEventListener('click', gandalfAvatarClickHandler);\n  }\n  if (aragornAvatarClickHandler && aragornAvatar) {\n    aragornAvatar.removeEventListener('click', aragornAvatarClickHandler);\n  }\n  if (legolasAvatarClickHandler && legolasAvatar) {\n    legolasAvatar.removeEventListener('click', legolasAvatarClickHandler);\n  }\n\n  popupClickHandler = (e) => {\n    const el = e.target;\n    if (!el.closest('.popup__container')) {\n      closePopup(parentElement);\n\n      if (parentElement === '[data-popup=\"results\"]') {\n        cleanBattleLog();\n        initBattle();\n        saveGameState();\n      }\n    }\n\n    if (el.closest('.popup__close')) {\n      closePopup(parentElement);\n\n      if (parentElement === '[data-popup=\"results\"]') {\n        cleanBattleLog();\n        initBattle();\n        saveGameState();\n      }\n    }\n  };\n\n  frodoClickHandler = (e) => {\n    gameState.player.avatar = frodoAvatarImg;\n    initCharacter();\n    saveGameState();\n    closePopup('[data-popup=\"character_change\"]');\n  };\n\n  gandalfAvatarClickHandler = (e) => {\n    gameState.player.avatar = gandalfAvatarImg;\n    initCharacter();\n    saveGameState();\n    closePopup('[data-popup=\"character_change\"]');\n  };\n\n  aragornAvatarClickHandler = (e) => {\n    gameState.player.avatar = aragornAvatarImg;\n    initCharacter();\n    saveGameState();\n    closePopup('[data-popup=\"character_change\"]');\n  };\n\n  legolasAvatarClickHandler = (e) => {\n    gameState.player.avatar = legolasAvatarImg;\n    initCharacter();\n    saveGameState();\n    closePopup('[data-popup=\"character_change\"]');\n  };\n\n  popup.addEventListener('click', popupClickHandler);\n\n  if (frodoAvatar && gandalfAvatar && aragornAvatar && legolasAvatar) {\n    frodoAvatar.addEventListener('click', frodoClickHandler);\n    gandalfAvatar.addEventListener('click', gandalfAvatarClickHandler);\n    aragornAvatar.addEventListener('click', aragornAvatarClickHandler);\n    legolasAvatar.addEventListener('click', legolasAvatarClickHandler);\n  }\n\n  // RESULTS POPUP\n  const newFightResultsBtn = document.querySelector(\n    '[data-popup_results_btn_fight]',\n  );\n\n  const changeCharacterResultsBtn = document.querySelector(\n    '[data-popup_results_btn_character]',\n  );\n\n  if (newFightResultsBtnHandler && newFightResultsBtn) {\n    newFightResultsBtn.removeEventListener('click', newFightResultsBtnHandler);\n  }\n\n  if (changeCharacterResultsBtnHandler && changeCharacterResultsBtn) {\n    changeCharacterResultsBtn.removeEventListener(\n      'click',\n      changeCharacterResultsBtnHandler,\n    );\n  }\n\n  // const registerScreenEl = document.querySelector('[data-screen=\"register\"]');\n  // const homeScreenEl = document.querySelector('[data-screen=\"home\"]');\n  // const characterScreenEl = document.querySelector('[data-screen=\"character\"]');\n  // const settingsScreenEl = document.querySelector('[data-screen=\"settings\"]');\n  // const battleScreenEl = document.querySelector('[data-screen=\"battle\"]');\n\n  // const screens = {\n  //   register: registerScreenEl,\n  //   home: homeScreenEl,\n  //   character: characterScreenEl,\n  //   settings: settingsScreenEl,\n  //   battle: battleScreenEl,\n  // };\n\n  changeCharacterResultsBtnHandler = async (e) => {\n    closePopup('[data-popup=\"results\"');\n    cleanBattleLog();\n    initBattle();\n    await showScreen('./views/character.html');\n    await addToScreen('./views/toolbar.html');\n    initCharacter();\n    saveGameState();\n  };\n\n  newFightResultsBtnHandler = (e) => {\n    closePopup('[data-popup=\"results\"');\n    cleanBattleLog();\n    initBattle();\n    saveGameState();\n  };\n\n  if (newFightResultsBtn && changeCharacterResultsBtn) {\n    newFightResultsBtn.addEventListener('click', newFightResultsBtnHandler);\n    changeCharacterResultsBtn.addEventListener(\n      'click',\n      changeCharacterResultsBtnHandler,\n    );\n  }\n}\n\nexport function closePopup(parentElement) {\n  const popup = document.querySelector(parentElement);\n  const popupContainer = popup.querySelector('[data-popup_container]');\n\n  const popupShowAnimation = [{ opacity: '1' }, { opacity: '0' }];\n\n  const popupTiming = {\n    duration: 400,\n    fill: 'forwards',\n  };\n\n  const animate = popupContainer.animate(popupShowAnimation, popupTiming);\n  const isCharacterView = document.querySelector(\n    '[data-popup=\"character_change\"]',\n  );\n\n  animate.addEventListener('finish', () => {\n    popup.classList.remove('popup--active');\n    popup.remove();\n\n    if (isCharacterView) {\n      initCharacter();\n    }\n\n    initToolbar();\n  });\n}\n","import { gameState } from '../state';\nimport { showPopup } from './popup';\n\nimport frodoAvatarImg from '../../assets/images/character_frodo.jpg';\nimport gandalfAvatarImg from '../../assets/images/character_gandalf.jpg';\nimport aragornAvatarImg from '../../assets/images/character_aragorn.jpg';\nimport legolasAvatarImg from '../../assets/images/character_legolas.jpg';\nimport { addToScreen } from '../screens';\n\nconst avatars = {\n  frodo: frodoAvatarImg,\n  gandalf: gandalfAvatarImg,\n  aragorn: aragornAvatarImg,\n  legolas: legolasAvatarImg,\n};\n\nlet characterAvatarMouseOverHandler = null;\nlet characterAvatarMouseOutHandler = null;\nlet editContainerHandler = null;\nlet characterAvatarBtnHandler = null;\n\nexport function initCharacter() {\n  const popupParent = document.querySelector('[data-popup=\"character_change\"]');\n\n  const editContainer = document.querySelector(\n    '[data-character_edit_container]',\n  );\n  const characterAvatar = document.querySelector('[data-character_avatar]');\n  const characterAvatarBtn = document.querySelector(\n    '[data-character_avatar_btn]',\n  );\n\n  const characterAvatarImg = document.querySelector(\n    '[data-character_avatar_img]',\n  );\n  const characterName = document.querySelector('[data-character_name]');\n  const characterWins = document.querySelector('[data-result_wins]');\n  const characterLoses = document.querySelector('[data-result_loses]');\n\n  characterAvatarImg.src = gameState.player.avatar;\n  characterName.textContent = gameState.player.name;\n  characterWins.textContent = gameState.player.wins;\n  characterLoses.textContent = gameState.player.loses;\n\n  const CONTAINER_ACTIVE_CLASS = 'character__avatar-edit-container--active';\n  editContainer.classList.remove(CONTAINER_ACTIVE_CLASS);\n\n  if (characterAvatarMouseOverHandler) {\n    characterAvatar.removeEventListener(\n      'mouseover',\n      characterAvatarMouseOverHandler,\n    );\n  }\n  if (characterAvatarMouseOutHandler) {\n    characterAvatar.removeEventListener(\n      'mouseout',\n      characterAvatarMouseOutHandler,\n    );\n  }\n  if (editContainerHandler) {\n    editContainer.removeEventListener('click', editContainerHandler);\n  }\n  if (characterAvatarBtnHandler) {\n    characterAvatarBtn.removeEventListener('click', characterAvatarBtnHandler);\n  }\n\n  characterAvatarMouseOverHandler = (e) => {\n    editContainer.classList.add(CONTAINER_ACTIVE_CLASS);\n  };\n\n  characterAvatarMouseOutHandler = (e) => {\n    editContainer.classList.remove(CONTAINER_ACTIVE_CLASS);\n  };\n\n  editContainerHandler = async (e) => {\n    await addToScreen('./views/popup_character.html');\n    await showPopup('[data-popup=\"character_change\"]');\n  };\n\n  characterAvatarBtnHandler = async (e) => {\n    await addToScreen('./views/popup_character.html');\n    await showPopup('[data-popup=\"character_change\"]');\n  };\n\n  characterAvatar.addEventListener(\n    'mouseover',\n    characterAvatarMouseOverHandler,\n  );\n  characterAvatar.addEventListener('mouseout', characterAvatarMouseOutHandler);\n\n  editContainer.addEventListener('click', editContainerHandler);\n\n  characterAvatarBtn.addEventListener('click', characterAvatarBtnHandler);\n}\n","import { gameState } from './state';\nimport { loadGameState, saveGameState } from './storage';\nimport { initCharacter } from './components/character';\nimport { initHome } from './components/home';\nimport { initSettings } from './components/settings';\nimport { initBattle } from './components/battle';\n\nimport frodoAvatarImg from '../assets/images/character_frodo.jpg';\nimport gandalfAvatarImg from '../assets/images/character_gandalf.jpg';\nimport aragornAvatarImg from '../assets/images/character_aragorn.jpg';\nimport legolasAvatarImg from '../assets/images/character_legolas.jpg';\nimport { changeWindowHash, handleLocation, router } from './router';\nimport { initRegister } from './components/register';\nimport { initToolbar } from './components/toolbar';\n\nexport async function initScreens() {\n  loadGameState();\n  if (gameState.player.name) {\n    await showScreen('./views/home.html');\n    await addToScreen('./views/toolbar.html');\n    await initToolbar();\n    await initHome();\n    handleLocation();\n  } else {\n    gameState.player.avatar = frodoAvatarImg;\n    await showScreen('./views/register.html');\n    await initRegister();\n    changeWindowHash('/register');\n  }\n}\n\nexport async function showScreen(pathToView) {\n  const html = await fetch(pathToView).then((data) => data.text());\n  document.getElementById('root').innerHTML = html;\n}\n\nexport async function addToScreen(pathToView) {\n  const html = await fetch(pathToView).then((data) => data.text());\n  document.getElementById('root').innerHTML += html;\n}\n","import '../styles/main.scss';\nimport { gameState } from './state';\nimport { loadGameState } from './storage';\nimport { initScreens } from './screens';\n\nimport { initCharacter } from './components/character';\nimport { initRegister } from './components/register';\nimport { initSettings } from './components/settings';\nimport { initBattle } from './components/battle';\n\n// initRegister();\n// initCharacter();\n// initSettings();\n\nwindow.addEventListener('DOMContentLoaded', () => {\n  loadGameState();\n  initScreens();\n\n  // loadGameState();\n  // initBattle();\n});\n"],"names":["__webpack_require__","gameState","player","name","avatar","wins","loses","health","maxHealth","attack","attackZones","defendZones","critChance","critMultiplier","battle","playerAttack","playerDefend","enemyAttack","enemyDefend","log","enemy","enemies","saveGameState","localStorage","setItem","JSON","stringify","loadGameState","savedState","getItem","parsed","parse","Object","assign","registerBtnHandler","registerInputHandler","battleZoneAttackClickHandler","battleZoneDefenceClickHandler","battleAttackBtnHandler","isResultsPopupShown","initBattle","battleLogEl","document","querySelector","forEach","obj","isCrit","isBlocked","createAttackLog","createDefendLog","randomIndex","Math","floor","random","length","updateBattleScreen","battleAttackBtn","disabled","battleZoneAttack","battleZoneDefence","battleZoneAttackInputs","querySelectorAll","battleZoneDefenceInputs","input","checked","removeEventListener","attackMaxSelect","attackSelectedCheboxesArr","e","el","target","tagName","selectedCheckboxes","closest","push","filter","shift","updateBattleBtnState","defenceMaxSelect","defenceSelectedCheboxesArr","addEventListener","attackZonesArr","defenceZonesArr","dataset","battle_zone_attack_input","battle_zone_defence_input","i","randomIdx","allZonesArr","includes","chooseEnemyAttackZones","chooseEnemyDefendZones","calculateResults","attackResults","character","characterAttack","characterDefend","characterAttackStr","characterDefendStr","isCritical","damage","isCharacterAttacking","attackingCharacterSpan","defendingCharacterSpan","attackObj","attackerName","defenderName","attackZone","updateBattleHealth","logItem","createElement","classList","add","innerHTML","attackZoneCapitalized","toUpperCase","slice","attackItemLogHTML","append","scrollTop","scrollHeight","defendItemLogHTML","async","showResultsPopup","result","console","savedScrollTop","addToScreen","newBattleLogEl","resultsPopupTitle","imgIcon","src","textContent","showPopup","characterAvatarImg","characterName","characterHealth","characterTotalHealth","characterHealthBg","enemyHealthBg","style","width","enemyAvatarImg","enemyName","enemyCurrentHealth","enemyTotalHealth","cleanBattleLog","initHome","initRegister","registerBtn","registerInput","value","router","initToolbar","editNameHandler","inputHandler","initSettings","settingsChangeName","editNameBtn","changeNameInput","currentNameSpan","currentPlayerName","remove","contains","trim","routes","path","link","window","history","pushState","handleLocation","changeWindowHash","hash","location","pathname","route","initScreens","html","fetch","then","data","text","toolBar","getElementById","initFunc","initCharacter","title","page_btn","str","popupClickHandler","frodoClickHandler","gandalfAvatarClickHandler","aragornAvatarClickHandler","legolasAvatarClickHandler","newFightResultsBtnHandler","changeCharacterResultsBtnHandler","parentElement","body","popup","animate","opacity","duration","fill","frodoAvatar","gandalfAvatar","aragornAvatar","legolasAvatar","closePopup","newFightResultsBtn","changeCharacterResultsBtn","showScreen","isCharacterView","characterAvatarMouseOverHandler","characterAvatarMouseOutHandler","editContainerHandler","characterAvatarBtnHandler","editContainer","characterAvatar","characterAvatarBtn","characterWins","characterLoses","CONTAINER_ACTIVE_CLASS","pathToView"],"sourceRoot":""}